
import jsPDF from 'jspdf';
import { Quotation } from '@/hooks/useQuotations';

export const exportQuotationToPDF = (quotation: Quotation) => {
  const doc = new jsPDF();
  
  // Set up the document
  doc.setFont('helvetica');
  
  // Header
  doc.setFontSize(20);
  doc.setTextColor(34, 197, 94); // Green color
  doc.text('QUOTATION', 20, 30);
  
  // Quote number
  doc.setFontSize(12);
  doc.setTextColor(0, 0, 0);
  doc.text(`Quote #${quotation.quote_number}`, 150, 30);
  
  // Date information
  doc.setFontSize(10);
  doc.text(`Created: ${new Date(quotation.created_at).toLocaleDateString()}`, 150, 40);
  if (quotation.valid_until) {
    doc.text(`Valid until: ${new Date(quotation.valid_until).toLocaleDateString()}`, 150, 50);
  }
  
  // Client information
  doc.setFontSize(14);
  doc.setTextColor(0, 0, 0);
  doc.text('CLIENT INFORMATION', 20, 60);
  
  doc.setFontSize(10);
  doc.text(`Client: ${quotation.client?.full_name || 'N/A'}`, 20, 75);
  doc.text(`Workshop: ${quotation.workshop?.name || 'N/A'}`, 20, 85);
  
  if (quotation.vehicle) {
    doc.text(`Vehicle: ${quotation.vehicle.year} ${quotation.vehicle.make} ${quotation.vehicle.model}`, 20, 95);
    doc.text(`License Plate: ${quotation.vehicle.license_plate}`, 20, 105);
  }
  
  // Description
  if (quotation.description) {
    doc.setFontSize(12);
    doc.text('DESCRIPTION', 20, 125);
    doc.setFontSize(10);
    const splitDescription = doc.splitTextToSize(quotation.description, 170);
    doc.text(splitDescription, 20, 135);
  }
  
  // Items table
  let yPosition = quotation.description ? 160 : 125;
  doc.setFontSize(12);
  doc.text('QUOTE ITEMS', 20, yPosition);
  
  // Table headers
  yPosition += 15;
  doc.setFontSize(9);
  doc.setTextColor(100, 100, 100);
  doc.text('Description', 20, yPosition);
  doc.text('Qty', 100, yPosition);
  doc.text('Unit Price', 120, yPosition);
  doc.text('Type', 150, yPosition);
  doc.text('Total', 175, yPosition);
  
  // Table line
  yPosition += 3;
  doc.line(20, yPosition, 190, yPosition);
  
  // Items
  yPosition += 10;
  doc.setTextColor(0, 0, 0);
  
  if (quotation.items && quotation.items.length > 0) {
    quotation.items.forEach((item) => {
      // Check if we need a new page
      if (yPosition > 250) {
        doc.addPage();
        yPosition = 30;
      }
      
      doc.text(item.description.substring(0, 30), 20, yPosition);
      doc.text(item.quantity.toString(), 100, yPosition);
      doc.text(`$${item.unit_price.toFixed(2)}`, 120, yPosition);
      doc.text(item.item_type, 150, yPosition);
      doc.text(`$${item.total_price.toFixed(2)}`, 175, yPosition);
      yPosition += 10;
    });
  }
  
  // Totals
  yPosition += 10;
  const subtotal = quotation.items?.reduce((sum, item) => sum + item.total_price, 0) || 0;
  const tax = subtotal * (quotation.tax_rate || 0);
  const total = quotation.total_cost || 0;
  
  doc.line(120, yPosition, 190, yPosition);
  yPosition += 10;
  
  doc.setFontSize(10);
  doc.text(`Subtotal:`, 120, yPosition);
  doc.text(`$${subtotal.toFixed(2)}`, 175, yPosition);
  yPosition += 10;
  
  if (quotation.tax_rate && quotation.tax_rate > 0) {
    doc.text(`Tax (${(quotation.tax_rate * 100).toFixed(1)}%):`, 120, yPosition);
    doc.text(`$${tax.toFixed(2)}`, 175, yPosition);
    yPosition += 10;
  }
  
  doc.setFontSize(12);
  doc.setFont('helvetica', 'bold');
  doc.text(`TOTAL:`, 120, yPosition);
  doc.text(`$${total.toFixed(2)}`, 175, yPosition);
  
  // Status
  yPosition += 20;
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  const statusColor = quotation.status === 'approved' ? [34, 197, 94] : 
                     quotation.status === 'rejected' ? [239, 68, 68] : 
                     [234, 179, 8];
  doc.setTextColor(statusColor[0], statusColor[1], statusColor[2]);
  doc.text(`Status: ${quotation.status?.toUpperCase() || 'DRAFT'}`, 20, yPosition);
  
  // Footer
  const pageHeight = doc.internal.pageSize.height;
  doc.setTextColor(100, 100, 100);
  doc.setFontSize(8);
  doc.text('Generated by Workshop Management System', 20, pageHeight - 20);
  doc.text(new Date().toLocaleString(), 20, pageHeight - 10);
  
  // Save the PDF
  const fileName = `Quote-${quotation.quote_number}-${quotation.client?.full_name?.replace(/\s+/g, '-') || 'Client'}.pdf`;
  doc.save(fileName);
};
